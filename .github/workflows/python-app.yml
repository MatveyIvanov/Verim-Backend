# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - uses: actions/checkout@v3
      # with:
      #   persist-credentials: false
      #   fetch-depth: 0
    - name: Create env file
      run: |
        echo "${{ vars.ENV_FILE }}" > .env
    - name: Build containers
      run: |
        docker-compose up -d auth
        docker-compose up -d gateway
        docker-compose up -d publisher
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        docker exec dev-verim-auth python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        docker exec dev-verim-gateway python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        docker exec dev-verim-publisher python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        docker exec dev-verim-auth python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        docker exec dev-verim-gateway python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        docker exec dev-verim-publisher python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    - name: Test with pytest
      run: |
        docker exec dev-verim-auth python -m pytest tests --doctest-modules --junitxml=junit/auth-test-results.xml --cov=. | tee auth-test-results.txt
        docker exec dev-verim-gateway python -m pytest tests --doctest-modules --junitxml=junit/gateway-test-results.xml --cov=. | tee gateway-test-results.txt
        docker exec dev-verim-publisher python -m pytest tests --doctest-modules --junitxml=junit/publisher-test-results.xml --cov=. | tee publisher-test-results.txt
        docker cp dev-verim-auth:/microservice/junit/auth-test-results.xml .
        docker cp dev-verim-gateway:/microservice/junit/gateway-test-results.xml .
        docker cp dev-verim-publisher:/microservice/junit/publisher-test-results.xml .
    - name: Pytest auth coverage comment
      id: authCoverageComment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./auth-test-results.txt
        hide-badge: false
        hide-report: false
        create-new-comment: false
        hide-comment: false
        report-only-changed-files: true
        remove-link-from-badge: true
        junitxml-path: ./auth-test-results.xml
    - name: Pytest gateway coverage comment
      id: gatewayCoverageComment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./gateway-test-results.txt
        hide-badge: false
        hide-report: false
        create-new-comment: false
        hide-comment: false
        report-only-changed-files: true
        remove-link-from-badge: true
        junitxml-path: ./gateway-test-results.xml
    - name: Pytest publisher coverage comment
      id: publisherCoverageComment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./publisher-test-results.txt
        hide-badge: false
        hide-report: false
        create-new-comment: false
        hide-comment: false
        report-only-changed-files: true
        remove-link-from-badge: true
        junitxml-path: ./publisher-test-results.xml

    # Only on dev merge!!!
    - name: Pytest auth coverage badge
      # if: ${{ github.ref == 'refs/heads/dev' }}
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 757112fa1eaaf7bee58f771e2238c394
        filename: VerimDevAuthCoverage.json
        label: Auth Coverage
        message: ${{ steps.authCoverageComment.outputs.coverage }}
        color: ${{ steps.authCoverageComment.outputs.color }}
        namedLogo: python
    - name: Pytest gateway coverage badge
      # if: ${{ github.ref == 'refs/heads/dev' }}
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 757112fa1eaaf7bee58f771e2238c394
        filename: VerimDevGatewayCoverage.json
        label: Gateway Coverage
        message: ${{ steps.gatewayCoverageComment.outputs.coverage }}
        color: ${{ steps.gatewayCoverageComment.outputs.color }}
        namedLogo: python
    - name: Pytest publisher coverage badge
      # if: ${{ github.ref == 'refs/heads/dev' }}
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 757112fa1eaaf7bee58f771e2238c394
        filename: VerimDevPublisherCoverage.json
        label: Publisher Coverage
        message: ${{ steps.publisherCoverageComment.outputs.coverage }}
        color: ${{ steps.publisherCoverageComment.outputs.color }}
        namedLogo: python
    - name: Update Readme with Coverage Html
      # if: ${{ github.ref == 'refs/heads/dev' }}
      run: |
        rm auth-test-results.xml
        rm auth-test-results.txt
        rm gateway-test-results.xml
        rm gateway-test-results.txt
        rm publisher-test-results.xml
        rm publisher-test-results.txt
        sed -i '/<!-- Pytest Auth Coverage Comment:Begin -->/,/<!-- Pytest Auth Coverage Comment:End -->/c\<!-- Pytest Auth Coverage Comment:Begin -->\n\${{ steps.authCoverageComment.outputs.coverageHtml }}\n<!-- Pytest Auth Coverage Comment:End -->' ./README.md
        sed -i '/<!-- Pytest Gateway Coverage Comment:Begin -->/,/<!-- Pytest Gateway Coverage Comment:End -->/c\<!-- Pytest Gateway Coverage Comment:Begin -->\n\${{ steps.gatewayCoverageComment.outputs.coverageHtml }}\n<!-- Pytest Gateway Coverage Comment:End -->' ./README.md
        sed -i '/<!-- Pytest Publisher Coverage Comment:Begin -->/,/<!-- Pytest Publisher Coverage Comment:End -->/c\<!-- Pytest Publisher Coverage Comment:Begin -->\n\${{ steps.publisherCoverageComment.outputs.coverageHtml }}\n<!-- Pytest Publisher Coverage Comment:End -->' ./README.md
    # - name: Commit & Push changes to Readme
    #   # if: ${{ github.ref == 'refs/heads/dev' }}
    #   uses: actions-js/push@master
    #   with:
    #     message: Update coverage on Readme
    #     github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Commit & Push changes to Readme
      run: |
        git config --global user.name ${{ secrets.GIT_USER_NAME }}
        git config --global user.email ${{ secrets.GIT_USER_EMAIL }}
        git commit -am "Update coverage on Readme"
        git remote set-url --push origin https://$GITHUB_TOKEN:$GITHUB_TOKEN@github.com/Verim-Back
        git push
