# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]

permissions:
  contents: read

jobs:
  build-auth:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pip install poetry
    - name: Set up Python 3.11.5
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.5"
        cache: "poetry"
    - name: Install dependencies
      working-directory: ./auth
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        poetry install
    - name: Lint with flake8
      working-directory: ./auth
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      working-directory: ./auth
      run: |
        poetry run python -m pytest tests --doctest-modules --junitxml=junit/auth-test-results.xml --cov=com --cov-report=xml --cov-report=html
    - name: Run MyPy checks
      uses: actions/checkout@v2
      uses: tsuyoshicho/action-mypy@v3
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review
        level: warning
        workdir: src
        execute_command: 'poetry run mypy'


  build-publisher:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pip install poetry
    - name: Set up Python 3.11.5
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.5"
        cache: "poetry"
    - name: Install dependencies
      working-directory: ./publisher
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        poetry install
    - name: Lint with flake8
      working-directory: ./publisher
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      working-directory: ./publisher
      run: |
        poetry run python -m pytest tests --doctest-modules --junitxml=junit/publisher-test-results.xml --cov=com --cov-report=xml --cov-report=html
    - name: Run MyPy checks
      uses: actions/checkout@v2
      uses: tsuyoshicho/action-mypy@v3
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review
        level: warning
        workdir: src
        execute_command: 'poetry run mypy'
