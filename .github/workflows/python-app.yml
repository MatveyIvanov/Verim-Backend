# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Create env file
      run: |
        echo "${{ secrets.ENV_FILE }}" > .env
    - name: Build containers
      run: docker-compose up -d auth
    - name: Lint auth-service with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        docker exec ${{ secrets.ENV_FILE.CONTAINER_PREFIX }}-auth python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        docker exec ${{ secrets.ENV_FILE.CONTAINER_PREFIX }}-auth python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    - name: Test auth-service with pytest
      run: |
        docker exec ${{ secrets.ENV_FILE.CONTAINER_PREFIX }}-auth python -m pytest tests --doctest-modules --junitxml=junit/auth-test-results.xml --cov=com --cov-report=xml --cov-report=html
